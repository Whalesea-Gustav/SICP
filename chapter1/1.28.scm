(define (Miller-Rabin-test n)
  (test-prime n (testTime n)))
(define (testTime n)
  (cond ((even? n) n)
        (else (+ n 1))))
(define (test-prime n times)
  (cond ((= times 0)#t)
        ((prime? n) (test-prime n (- times 1)))
        (else #f)))

(define (prime? n)
  (= (expmod (+ 1 (random (- n 1))) n n) 1))
(define (expmod base exp mod)
  (cond ((= exp 0) 1)
        ((nontrivial-square-root base mod) 0)
        ((even? exp) (remainder (* (expmod base (/ exp 2) mod) (expmod base (/ exp 2) mod)) mod))
        (else (remainder (* base (expmod base (- exp 1) mod)) mod))))
(define (nontrivial-square-root base mod)
  (and (not (= base 1))
       (not (= base -1))
       (= (remainder base mod) 1)))
>(Miller-Robin-test 561)
